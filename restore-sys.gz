#!/bin/bash
# fredx181, 2023-11-21
# changes 2024-02-24:
# - more error checking
# - exit when booted with save file (only savefolder supported)
# - exit when trying to restore twice (only once supported during a session), but creating restorepoints is unlimited
# - .bak directories showing also now in restore list
# - dialog to add extra info (will show in history log) when creating restore point
# - button 'History log'  added to the CREATE/RESTORE dialog

if findmnt | grep -q "/mnt/layers/uc_ro"; then
RAM_2=yes
export UC="$(findmnt | grep "/mnt/layers/uc_ro" | awk '{print $3}' | sed 's#[][]##g; s#dev#mnt#g')"
#echo $UC
if [ $(echo "$UC" | grep "loop") ]; then
export SFILE=yes
fi
else 
export UC="$(findmnt | grep -o "upperdir=.*/upper_changes" | head -1 | sed 's#upperdir=##g')"
[ "$UC" = "/mnt/layers/RAM/upper_changes" ] && RAM_0=yes
if [ $(echo "$UC" | grep "loop") ]; then
export SFILE=yes
fi
fi

if [ "$RAM_0" = "yes" ]; then
yad --center --borders=10 --title="RAM0 mode detected" --text="\n Looks like you are running the system without changes \n Cannot create a restore point, sorry \n Exiting..." --width=500 --button="Close:0"
exit
fi

echo $UC
if [ "$UC" = "" ]; then
yad --center --borders=10 --title="No changes found" --text="\n Could not find save storage on this OS \n Exiting..." --width=500 --button="Close:0"
exit
fi

if [ "$SFILE" = "yes" ]; then
yad --center --borders=10 --title="Save file not supported" --text="\n Looks like you are running the system with a savefile\n It is not supported at this time, only savefolder, sorry \n Exiting..." --width=500 --button="Close:0"
exit
fi

if [ "$RAM_2" = "yes" ]; then
yad --center --borders=10 --title="RAM2 mode detected" --text="\n Looks like you are running the system with w_changes=RAM2 mode (save on demand) \n If you want to include the current changes in a restore point to be created: \n Click 'Cancel' and run <b>save2flash</b> first \n Or: click 'OK' to continue" --width=600
ret=$?
[[ $ret -ne 0 ]] && exit
fi

create_restore () {    # create restore point
s=$(date +"%Y%m%d%H%M%S")
mkdir -p $(dirname "$UC")/upper_changes_$s
ss="${s::4}-${s:4:2}-${s:6:2}"
t="${s:8:2}:${s:10:2}:${s:12:2}"
yad --center --borders=15 --text=" <b><big><big>Copying...</big></big></b>  \n <b><big><big>Please wait . . .</big></big></b>  " --height=70 --no-buttons --undecorated --on-top & 
cp -a "$UC/"* "$(dirname "$UC")/upper_changes_$s/"
echo "Restore point: $(dirname "$UC")/upper_changes_$s created !"
echo "Point of Time: $(date --date=$ss +"%d %h %Y") $t"
sleep 2
kill $!
EXTRA_INFO=$(yad --title="Extra Info" --borders=8 --entry --center --width=550 --text="Add some extra info about this restore point\n(will show in the log file),\nor leave empty as you wish" --button="OK:0")
echo -e "[At: $(date --date=$ss +"%d %h %Y") $t] Created: upper_changes_$s \n $EXTRA_INFO\n--------------------------------------------------------------------------------" >> "$(dirname ${UC})/restore_history"
yad --center --title="Restore point created" --text="\n Restore point: $(dirname "$UC")/upper_changes_$s created ! \n Point of Time: $(date --date=$ss +"%d %h %Y") $t \n\n See also info in created history log: \n $(dirname ${UC})/restore_history" --width 600 --button="Close:0"
}; export -f create_restore


history () {
if [ ! -f "$(dirname ${UC})/restore_history" ]; then
yad --title="No history found" --text="No history log found (yet)                         " --button="Close:0"
exit
fi
cat "$(dirname ${UC})/restore_history" | yad --center --title="History Log (read-only)" --text-info --width=780 --height=500
}; export -f history

if [ "$(find "$(dirname "$UC")" -mindepth 1 -maxdepth 1 -name "upper_changes_*")" ]; then
yad --center --item-separator=":"  --title="Create or Restore ?" --text="\n Would you like to CREATE a restore point ?\n Or RESTORE to a point in history ?\n" \
--button="History Log:bash -c history" --button="CREATE:0"  --button="RESTORE:2" --button="CANCEL:1"
ret=$?

if [[ $ret -eq 0 ]]; then
create_restore

elif [[ $ret -eq 2 ]]; then
#rm /tmp/RESTORElist 2> /dev/null
if [ -e /tmp/RESTORElist ]; then
echo "Restoring can be done only once during a session"
yad --center --borders=10 --title="Already restored" --text="\n Looks like you have restored already (can be done only once during a session) \n Cannot continue unless you reboot, \n Exiting..." --width=600 --button="Close:0"
exit
fi
#set -x
while read s; do
echo $s >> /tmp/RESTORElist
s="$(echo "$s" | sed 's#upper_changes_##')"
ss="${s::4}${s:4:2}${s:6:2}"
t="${s:8:2}:${s:10:2}:${s:12:2}"
echo "$(date --date=$ss +"%d %h %Y") $t" >> /tmp/RESTORElist
done <<< "$(find $(dirname "$UC") -mindepth 1 -maxdepth 1 -name "upper_changes_*" | sed "s#$(dirname ${UC})/##g")"

result=$(cat /tmp/RESTORElist | yad --title="Choose restore point" --text="Choose restore point" --list --column Name --column Date --width=520 --height=400)
ret=$?
if [[ $ret -ne 0 ]]; then
rm -f /tmp/RESTORElist
exit
fi
export rest="`echo $result | cut -d "|" -f 1`"
export d="`echo $result | cut -d "|" -f 2`"

if [ -z "$rest" ]; then
yad --center --title="Nothing selected" --text="\n Nothing selected\n Exiting..." --button="Close:0"
rm /tmp/RESTORElist 2> /dev/null
exit
fi

echo "$rest will be renamed to upper_changes, applied after reboot"
# rename original upper_changes to upper_changes<timestamp>.bak 
s=$(date +"%Y%m%d%H%M%S")
ss="${s::4}${s:4:2}${s:6:2}"
t="${s:8:2}:${s:10:2}:${s:12:2}"
mv -f "$(dirname ${UC})/upper_changes" "$(dirname ${UC})/upper_changes_${s}.bak"
echo -e "[At: $(date --date=$ss +"%d %h %Y") $t] Restored: $rest $d \n Original upper_changes renamed to upper_changes_${s}.bak\n--------------------------------------------------------------------------------" >> "$(dirname ${UC})/restore_history"
# rename 'timestamped' upper_changes to upper_changes
mv -f "$(dirname ${UC})/$rest" "$(dirname ${UC})/upper_changes"
#rm -f /tmp/RESTORElist
yad --center --borders=10 --title="Restored..." --text=" Restored to: \n Point of Time: $(date --date=$ss +"%d %h %Y") $t \n <b>Reboot to apply</b> \n (the original upper_changes folder is renamed to <b>upper_changes_${s}.bak</b>)\n \n Do <b>NOT</b> remove it as it's the new mountpoint for the changes (during this session) \n (for next session, after reboot, it will be part of history, can be chosen from the restore list again)\n\n See also info in created history log: \n $(dirname ${UC})/restore_history \n\n <b>Note:</b> Direct reboot is adviced ! \n Because any change you make in the system before rebooting  will <b>NOT</b> have any effect \n <b>Reboot Now ?</b>" --width=700 --button="YES:0"  --button="no:1"
[ $? -eq 0 ] && reboot || exit

else
exit
fi

else
yad --title="Create Restore point ?" --text="\n No restore points found yet. \n Would you like to create a restore point ?\n (will create a timestamped upper_changes folder)\n"
ret=$?
[[ $ret -ne 0 ]] && exit
create_restore
fi
